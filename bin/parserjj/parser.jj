options {
  STATIC = false;
}

PARSER_BEGIN(ProyectoParser)

package parserjj;

public class ProyectoParser {

}

PARSER_END(ProyectoParser)

/* WHITE SPACE */

SKIP:
{
  " "
| "\t"
| "\n"
| "\r"
}

/* COMMENTS */

SKIP:
{
  <MULTI_LINE_COMMENT: "/*" (~["*"])* "*" (~["/"] (~["*"])* "*")* "/" >
}

TOKEN:
{
  <BAR: "|" >
| <SEMICOLON: ";" >
| <EQ: "::=" >
| <NOTERMINAL: ["a"-"z","A"-"Z","_"] (["a"-"z","A"-"Z","0"-"9","_"])* >
| <TERMINAL: "<" ["a"-"z","A"-"Z","_"] (["a"-"z","A"-"Z","0"-"9","_"])* ">" >
}

// Análisis sintáctico ascendente


// Punto de entrada
void Gramatica():
{}
{
  (Definicion())*
}

void Definicion():
{}
{
  <NOTERMINAL> <EQ> ListaReglas() <SEMICOLON>
}

void ListaReglas():
{}
{
  Regla() ( <BAR> Regla() )*
}

void Regla():
{}
{
  ( <NOTERMINAL> | <TERMINAL> )*
}
